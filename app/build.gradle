/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit 4 for testing.
   testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.mockito:mockito-core:4.0.0'
    implementation libs.guava
    implementation 'org.apache.shardingsphere:shardingsphere-sql-parser-mysql:5.2.1'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

test {
    useJUnitPlatform()
    
    // Show test results
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = false
    }
    
    // Set test JVM options
    jvmArgs '-Xmx1g'
    
    // Enable parallel test execution (optional)
    maxParallelForks = Runtime.runtime.availableProcessors()
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'lite.sqlite.App'
}

tasks.named('test') {
    // Use JUnit 4 for unit tests.
    useJUnit()
}

task testRecordPage(type: Test) {
    useJUnitPlatform()
    filter {
        includeTestsMatching "lite.sqlite.server.storage.record.RecordPageTest"
    }
    testLogging {
        events "passed", "skipped", "failed"
    }
}
